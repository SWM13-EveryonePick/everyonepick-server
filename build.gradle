plugins {
	id 'org.springframework.boot' version '2.7.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'jacoco'
}

group = 'soma'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.mapstruct:mapstruct:1.5.1.Final'
	implementation 'mysql:mysql-connector-java'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'
	implementation 'org.springdoc:springdoc-openapi-security:1.6.9'
	implementation 'org.springdoc:springdoc-openapi-javadoc:1.6.9'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'org.springframework.security:spring-security-test'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.springframework.cloud:spring-cloud-aws-context:2.2.1.RELEASE'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap:3.1.4'
	implementation 'com.google.firebase:firebase-admin:9.1.1'
	implementation 'org.junit.jupiter:junit-jupiter:5.8.1'
	implementation 'org.junit.jupiter:junit-jupiter:5.8.1'

	compileOnly 'org.projectlombok:lombok'

	runtimeOnly 'com.h2database:h2'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.1.Final'
}

tasks.named('test') {
	useJUnitPlatform()
}

jacoco {
	toolVersion = "0.8.8"
}

test {
	finalizedBy 'jacocoTestReport' // 테스트가 완료된 후 JaCoCo 보고서 생성
	jacoco {
		enabled = true
		destinationFile = file("$buildDir/jacoco/test.exec") // 결과 파일 설정
	}
}

jacocoTestReport {
	reports {
		html.enabled true // HTML 보고서 활성화
	}
}


